name: CI

# Controls when the workflow will run
on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch_name:
        type: string
        description: 'Branch or tag for the build.'
        required: true
      build_version:
        description: 'The version of the build.'
        required: false
      folder_path:
        type: string
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check branch/tag name
        run: |
          if [[  ( ${{ github.ref }} != refs/heads/${{ github.event.inputs.branch_name }} ) && ( ${{ github.ref }} != refs/tags/${{ github.event.inputs.branch_name }} ) ]]; then
            echo "Invalid branch or tag name. Skipping build."
            exit 1
          fi
          echo Success
          if [[${{ github.event.inputs.build_version }} != "" ]]; then
            echo "Build version: ${{ github.event.inputs.build_version }}"
          fi
          echo Success
          echo "Current branch/tag: ${{github.ref}}" 
          echo folder path
          echo ${{ github.event.inputs.folder_path }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          create-tag: ${{ github.event.inputs.branch_name }}
      - uses: ./my-action
        with:
          folder_path: ${{ github.event.inputs.folder_path }}
      - name: Extract tag name
        run: |
          tag_name=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
          echo "Extracted tag name: $tag_name"
          echo "::set-output name=extracted_tag::$tag_name"
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}  # Required for authenticated API access
        with:
          tag_name: ${{ steps.Extract_tag_name.outputs.extracted_tag }}  # Use extracted tag
          release_name: Release ${{ steps.Extract_tag_name.outputs.extracted_tag }}
          body: |
            Release for ${{ github.event.inputs.branch_name }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ steps.my-action.outputs.file_path }}  #using outputs
          asset_name: file_list.txt
          asset_content_type: text/plain